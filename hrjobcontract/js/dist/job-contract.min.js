/*
fraction.js
A Javascript fraction library.

Copyright (c) 2009  Erik Garrison <erik@hypervolu.me>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

// Copyright CiviCRM LLC 2013. See http://civicrm.org/licensing

define("job-contract/controllers/controllers",["common/angular"],function(e){"use strict";return e.module("hrjc.controllers",[])}),define("job-contract/filters/filters",["common/angular"],function(e){"use strict";return e.module("hrjc.filters",[])}),define("job-contract/filters/get-obj-by-id",["job-contract/filters/filters"],function(e){"use strict";e.filter("getObjById",["$log",function(e){return e.debug("Filter: getObjById"),function(e,t,n){if(!e)return null;for(var o=0,r=e.length;o<r;o++)if(+e[o].id==+t)return n?e[o][n]:e[o];return null}}])}),define("job-contract/services/services",["common/angular"],function(e){"use strict";return e.module("hrjc.services",[])}),define("job-contract/services/utils",["job-contract/services/services"],function(e){"use strict";e.factory("API",["$resource","$q","settings","$log",function(e,t,n,o){return o.debug("Service: UtilsService"),{resource:function(t,o,r){return!t||"string"!=typeof t||!o||"string"!=typeof o||r&&"object"!=typeof r?null:e(n.pathRest,{action:o,entity:t,json:r})},getOne:function(e,n){if(!e||"string"!=typeof e||n&&"object"!=typeof n)return null;var o,r=t.defer(),i=angular.extend({sequential:1},n);return this.resource(e,"get",i).get(function(e){o=e.values,r.resolve(1==o.length?o[0]:null)},function(){r.reject("Unable to fetch data")}),r.promise},get:function(e,n){if(!e||"string"!=typeof e||n&&"object"!=typeof n)return null;var o=t.defer(),r=angular.extend({sequential:1},n);return this.resource(e,"get",r).get(function(e){o.resolve(e.values)},function(){o.reject("Unable to fetch data")}),o.promise}}}]),e.factory("testAPI",["$resource","settings",function(e,t){return{resource:function(n,o,r){return!n||"string"!=typeof n||!o||"string"!=typeof o||r&&"object"!=typeof r?null:e(t.pathApp+"js/data/"+n+".json",{action:o,entity:n,json:r})}}}]),e.factory("UtilsService",["API","testAPI","settings","$q","$log","$timeout",function(e,t,n,o,r,i){return{getAbsenceTypes:function(){var t=o.defer();return e.resource("AbsenceType","get",{return:"id,title,default_entitlement,add_public_holiday_to_entitlement"}).get(function(e){angular.forEach(e.values,function(e){e.add_public_holiday_to_entitlement=!!parseInt(e.add_public_holiday_to_entitlement),e.default_entitlement=parseFloat(e.default_entitlement)}),t.resolve(e.values)},function(){t.reject("Unable to fetch absence types")}),t.promise},getHoursLocation:function(){var t=o.defer();return e.resource("HRHoursLocation","get",{sequential:1,is_active:1}).get(function(e){t.resolve(e.values)},function(){t.reject("Unable to fetch standard hours")}),t.promise},getPayScaleGrade:function(){var t=o.defer();return e.resource("HRPayScale","get",{sequential:1,is_active:1}).get(function(e){t.resolve(e.values)},function(){t.reject("Unable to fetch standard hours")}),t.promise},getNumberOfPublicHolidaysInCurrentPeriod:function(){var t=o.defer();return e.resource("PublicHoliday","getcountforcurrentperiod",{sequential:1}).get(function(e){var n=parseInt(e.result)||0;t.resolve(n)},function(){t.reject("Unable to fetch the number of public holidays in current period")}),t.promise},prepareEntityIds:function(e,t,n){function o(e){e.jobcontract_id=t,delete e.id,n?e.jobcontract_revision_id=n:delete e.jobcontract_revision_id}if(angular.isArray(e)){var r=0,i=e.length;for(r;r<i;r++)o(e[r])}else if(angular.isObject(e))return void o(e)},errorHandler:function(e,t,n){var o;return e.is_error?(o=e.error_message.split("_").join(" "),o=o.charAt(0).toUpperCase()+o.slice(1),r.error("Unable to save. \n"+o),n&&n.reject("Unable to save. \n"+o),e.trace&&r.error(e.trace),!0):e.values?void 0:(r.error(t||"Unknown Error"),n&&n.reject(t||"Unknown Error"),!0)},getManageEntitlementsPageURL:function(e){var t="civicrm/admin/leaveandabsences/periods/manage_entitlements",n="civicrm/contact/view",o=CRM.url(n,{cid:e,selectedChild:"hrjobcontract"});return CRM.url(t,{cid:e,returnUrl:o})}}}])}),define("job-contract/services/contract-details",["job-contract/services/services","job-contract/services/utils"],function(e){"use strict";e.factory("ContractDetailsService",["$filter","$resource","settings","$q","UtilsService","$log",function(e,t,n,o,r,i){function a(t){var n=e("formatDate")(t,"YYYY-MM-DD");return"Unspecified"!==n?n:t}i.debug("Service: ContractDetailsService");var c=t(n.pathRest,{action:"get",entity:"HRJobDetails",json:{}});return{validateDates:function(e){if(!e||"object"!=typeof e||!e.contact_id||!e.period_start_date)return null;e.period_start_date=a(e.period_start_date),e.period_end_date=a(e.period_end_date),e.sequential=0,e.debug=n.debug;var t,i=o.defer();return c.save({action:"validatedates",json:e},null,function(e){r.errorHandler(e,'Unable to fetch API "validatedates" response',i)||(t=e.values,i.resolve(t))}),i.promise},getOne:function(e){if(!e||"object"!=typeof e||!e.jobcontract_id&&!e.jobcontract_revision_id||e.jobcontract_id&&"number"!=typeof+e.jobcontract_id||e.jobcontract_revision_id&&"number"!=typeof+e.jobcontract_revision_id)return null;e.sequential=1,e.debug=n.debug;var t,i=o.defer();return c.get({json:e},function(e){r.errorHandler(e,"Unable to fetch contract details",i)||(t=e.values,i.resolve(1==t.length?t[0]:null))},function(){i.reject("Unable to fetch contract details")}),i.promise},getOptions:function(e,t){var r,i=o.defer();return t||(r=n.CRM.options.HRJobDetails||{},e&&"string"==typeof e&&(r=r[e]),i.resolve(r||{})),i.promise},getFields:function(e){if(e&&"object"!=typeof e)return null;e&&"object"==typeof e||(e={});var t=o.defer(),r=n.CRM.fields;return r&&r.HRJobDetails?t.resolve(r.HRJobDetails):(e.sequential=1,c.get({action:"getfields",json:e},function(e){e.values||t.reject("Unable to fetch contract details fields"),t.resolve(e.values)},function(){t.reject("Unable to fetch contract details fields")})),t.promise},save:function(e){if(!e||"object"!=typeof e)return null;e.period_start_date=a(e.period_start_date),e.period_end_date=a(e.period_end_date);var t,i=o.defer(),s=angular.extend({sequential:1,debug:n.debug},e);return c.save({action:"create",json:s},null,function(e){r.errorHandler(e,"Unable to create contract details",i)||(t=e.values,i.resolve(1==t.length?t[0]:null))},function(){i.reject("Unable to create contract details")}),i.promise},model:function(e){function t(e){var t=0,n=e.length,o={};for(t;t<n;t++)o[e[t].name]="";return"undefined"!=typeof o.id&&(o.id=null),"undefined"!=typeof o.jobcontract_revision_id&&(o.jobcontract_revision_id=null),"undefined"!=typeof o.location&&(o.location=null),o}var n=o.defer();return e?n.resolve(t(e)):this.getFields().then(function(e){n.resolve(t(e))}),n.promise}}}])}),define("job-contract/services/contract-hour",["job-contract/services/services","job-contract/services/utils"],function(e){"use strict";e.factory("ContractHourService",["$resource","settings","$q","UtilsService","$log",function(e,t,n,o,r){r.debug("Service: ContractHourService");var i=e(t.pathRest,{action:"get",entity:"HRJobHour",json:{}});return{getOne:function(e){if(!e||"object"!=typeof e||!e.jobcontract_revision_id||e.jobcontract_revision_id&&"number"!=typeof+e.jobcontract_revision_id)return null;e.sequential=1,e.debug=t.debug;var r,a=n.defer();return i.get({json:e},function(e){o.errorHandler(e,"Unable to fetch contract hours",a)||(r=e.values,a.resolve(1==r.length?r[0]:null))},function(){a.reject("Unable to fetch contract hours")}),a.promise},getOptions:function(e,o){var r,i=n.defer();if(!o){var r=t.CRM.options.HRJobHour||{};e&&"string"==typeof e&&(r=r[e]),i.resolve(r||{})}return i.promise},getFields:function(e){if(e&&"object"!=typeof e)return null;e&&"object"==typeof e||(e={});var o=n.defer(),r=t.CRM.fields;return r&&r.HRJobHour?o.resolve(r.HRJobHour):(e.sequential=1,i.get({action:"getfields",json:e},function(e){e.values||o.reject("Unable to fetch contract hours fields"),o.resolve(e.values)},function(){o.reject("Unable to fetch contract hours fields")})),o.promise},save:function(e){if(!e||"object"!=typeof e)return null;var r,a=n.defer(),c=angular.extend({sequential:1,debug:t.debug},e);return i.save({action:"create",json:c},null,function(e){o.errorHandler(e,"Unable to create contract hours",a)||(r=e.values,a.resolve(1==r.length?r[0]:null))},function(){a.reject("Unable to create contract hours")}),a.promise},model:function(e){function t(e){var t=0,n=e.length,o={};for(t;t<n;t++)o[e[t].name]="";return"undefined"!=typeof o.id&&(o.id=null),"undefined"!=typeof o.jobcontract_revision_id&&(o.jobcontract_revision_id=null),o}var o=n.defer();return e?o.resolve(t(e)):this.getFields().then(function(e){o.resolve(t(e))}),o.promise}}}])}),define("job-contract/services/contract-health",["job-contract/services/services","job-contract/services/utils"],function(e){"use strict";e.factory("ContractHealthService",["$resource","settings","$q","UtilsService","$log",function(e,t,n,o,r){r.debug("Service: ContractHealthService");var i=e(t.pathRest,{action:"get",entity:"HRJobHealth",json:{}});return{getOne:function(e){if(!e||"object"!=typeof e||!e.jobcontract_revision_id||e.jobcontract_revision_id&&"number"!=typeof+e.jobcontract_revision_id)return null;e.sequential=1,e.debug=t.debug;var r,a=n.defer();return i.get({json:e},function(e){o.errorHandler(e,"Unable to fetch contract Health",a)||(r=e.values,a.resolve(1==r.length?r[0]:null))},function(){a.reject("Unable to fetch contract Health")}),a.promise},getOptions:function(e,o){var r,a=n.defer(),c={};if(o)c.sequential=1,e&&"string"==typeof e&&(c.field=e),i.get({action:"getoptions",json:c},function(e){e.values||a.reject("Unable to fetch contract insurance options"),a.resolve(e.values)},function(){a.reject("Unable to fetch contract insurance options")});else{var r=t.CRM.options.HRJobHealth||{};e&&"string"==typeof e&&(r=r[e]),a.resolve(r||{})}return a.promise},getFields:function(e){if(e&&"object"!=typeof e)return null;e&&"object"==typeof e||(e={});var o=n.defer(),r=t.CRM.fields;return r&&r.HRJobHealth?o.resolve(r.HRJobHealth):(e.sequential=1,i.get({action:"getfields",json:e},function(e){e.values||o.reject("Unable to fetch contract insurance fields"),o.resolve(e.values)},function(){o.reject("Unable to fetch contract insurance fields")})),o.promise},save:function(e){if(!e||"object"!=typeof e)return null;var r,a=n.defer(),c=angular.extend({sequential:1,debug:t.debug},e);return i.save({action:"create",json:c},null,function(e){o.errorHandler(e,"Unable to create contract insurance",a)||(r=e.values,a.resolve(1==r.length?r[0]:null))},function(){a.reject("Unable to create contract insurance")}),a.promise},model:function(e){function t(e){var t=0,n=e.length,o={};for(t;t<n;t++)o[e[t].name]="";return"undefined"!=typeof o.id&&(o.id=null),"undefined"!=typeof o.jobcontract_revision_id&&(o.jobcontract_revision_id=null),o}var o=n.defer();return e?o.resolve(t(e)):this.getFields().then(function(e){o.resolve(t(e))}),o.promise}}}])}),define("job-contract/services/contract-leave",["job-contract/services/services","job-contract/services/utils"],function(e){"use strict";e.factory("ContractLeaveService",["$resource","$q","settings","UtilsService","$log",function(e,t,n,o,r){function i(e){angular.forEach(e,function(e){e.add_public_holidays=!!parseInt(e.add_public_holidays)})}r.debug("Service: ContractLeaveService");var a=e(n.pathRest,{action:"get",entity:"HRJobLeave",json:{}});return{getOne:function(e){if(!e||"object"!=typeof e||!e.jobcontract_revision_id||e.jobcontract_revision_id&&"number"!=typeof+e.jobcontract_revision_id||e.id&&"number"!=typeof+e.id||e.leaveType&&"number"!=typeof+e.leaveType)return null;e.sequential=1,e.debug=n.debug;var r=t.defer();return a.get({json:e},function(e){o.errorHandler(e,"Unable to fetch contract leave",r)||(i(e.values),r.resolve(e.values))},function(){r.reject("Unable to fetch contract leave")}),r.promise},getOptions:function(e,o){var r,i=t.defer();if(!o){var r=n.CRM.options.HRJobLeave||{};e&&"string"==typeof e&&(r=r[e]),i.resolve(r||{})}return i.promise},getFields:function(e){if(e&&"object"!=typeof e)return null;e&&"object"==typeof e||(e={});var o=t.defer(),r=n.CRM.fields;return r&&r.HRJobLeave?o.resolve(r.HRJobLeave):(e.sequential=1,a.get({action:"getfields",json:e},function(e){e.values||o.reject("Unable to fetch contract leave fields"),o.resolve(e.values)},function(){o.reject("Unable to fetch contract leave fields")})),o.promise},save:function(e){if(!e||"object"!=typeof e)return null;var r=t.defer(),c={sequential:1,values:e,debug:n.debug};return a.save({action:"replace",json:c},null,function(e){o.errorHandler(e,"Unable to create contract leave",r)||(i(e.values),r.resolve(e.values))},function(){r.reject("Unable to create contract details")}),r.promise},model:function(e,n){function o(e,t){var n=0,o=t.length,r=[],i={};for(n;n<o;n++)i[t[n].name]="";return"undefined"!=typeof i.id&&(i.id=null),"undefined"!=typeof i.jobcontract_revision_id&&(i.jobcontract_revision_id=null),"undefined"!=typeof i.location&&(i.location=null),e&&"object"==typeof e&&i&&"object"==typeof i&&"undefined"!=typeof i.leave_type?(i.getEstimatedLeaveAmount=function(e){return this.add_public_holidays&&e?parseFloat(this.leave_amount)+e:this.leave_amount},angular.forEach(e,function(e,t){i.leave_type=t,i.leave_amount=0,r.push(angular.copy(i))}),r):null}var r=t.defer(),i=n&&"object"==typeof n?n:this.getOptions("leave_type");return e?t.when(i).then(function(t){r.resolve(o(t,e))}):this.getFields().then(function(e){t.when(i).then(function(t){r.resolve(o(t,e))})}.bind(this)),r.promise}}}])}),define("job-contract/services/contract-pay",["job-contract/services/services","job-contract/services/utils"],function(e){"use strict";e.factory("ContractPayService",["$resource","settings","$q","UtilsService","$log",function(e,t,n,o,r){r.debug("Service: ContractPayService");var i=e(t.pathRest,{action:"get",entity:"HRJobPay",json:{}});return{getOne:function(e){if(!e||"object"!=typeof e||!e.jobcontract_revision_id||e.jobcontract_revision_id&&"number"!=typeof+e.jobcontract_revision_id)return null;e.sequential=1,e.debug=t.debug;var r,a=n.defer();return i.get({json:e},function(e){o.errorHandler(e,"Unable to fetch contract pay",a)||(r=e.values,a.resolve(1==r.length?r[0]:null))},function(){a.reject("Unable to fetch contract pay")}),a.promise},getOptions:function(e,o){var r,i=n.defer();if(!o){var r=t.CRM.options.HRJobPay||{};e&&"string"==typeof e&&(r=r[optionGroup]),i.resolve(r||{})}return i.promise},getFields:function(e){if(e&&"object"!=typeof e)return null;e&&"object"==typeof e||(e={});var o=n.defer(),r=t.CRM.fields;return r&&r.HRJobPay?o.resolve(r.HRJobPay):(e.sequential=1,i.get({action:"getfields",json:e},function(e){e.values||o.reject("Unable to fetch contract pay fields"),o.resolve(e.values)},function(){o.reject("Unable to fetch contract pay fields")})),o.promise},save:function(e){if(!e||"object"!=typeof e)return null;var r,a=n.defer(),c=angular.extend({sequential:1,debug:t.debug},e);return i.save({action:"create",json:c},null,function(e){o.errorHandler(e,"Unable to create contract pay",a)||(r=e.values,a.resolve(1==r.length?r[0]:null))},function(){a.reject("Unable to create contract pay")}),a.promise},model:function(e){function t(e){var t=0,n=e.length,o={};for(t;t<n;t++)o[e[t].name]="";return"undefined"!=typeof o.id&&(o.id=null),"undefined"!=typeof o.jobcontract_revision_id&&(o.jobcontract_revision_id=null),"undefined"!=typeof o.annual_benefits&&(o.annual_benefits=[]),"undefined"!=typeof o.annual_deductions&&(o.annual_deductions=[]),o}var o=n.defer();return e?o.resolve(t(e)):this.getFields().then(function(e){o.resolve(t(e))}),o.promise}}}])}),define("job-contract/services/contract-pension",["job-contract/services/services","job-contract/services/utils"],function(e){"use strict";e.factory("ContractPensionService",["$resource","settings","$q","UtilsService","$log",function(e,t,n,o,r){r.debug("Service: ContractPensionService");var i=e(t.pathRest,{action:"get",entity:"HRJobPension",json:{}});return{getOne:function(e){if(!e||"object"!=typeof e||!e.jobcontract_revision_id||e.jobcontract_revision_id&&"number"!=typeof+e.jobcontract_revision_id)return null;e.sequential=1,e.debug=t.debug;var r,a=n.defer();return i.get({json:e},function(e){o.errorHandler(e,"Unable to fetch contract pension",a)||(r=e.values,a.resolve(1==r.length?r[0]:null))},function(){a.reject("Unable to fetch contract pension")}),a.promise},getOptions:function(e,o){var r,i=n.defer();if(!o){var r=t.CRM.options.HRJobPension||{};e&&"string"==typeof e&&(r=r[optionGroup]),i.resolve(r||{})}return i.promise},getFields:function(e){if(e&&"object"!=typeof e)return null;e&&"object"==typeof e||(e={});var o=n.defer(),r=t.CRM.fields;return r&&r.HRJobPension?o.resolve(r.HRJobPension):(e.sequential=1,i.get({action:"getfields",json:e},function(e){e.values||o.reject("Unable to fetch contract pension fields"),o.resolve(e.values)},function(){o.reject("Unable to fetch contract pension fields")})),o.promise},save:function(e){if(!e||"object"!=typeof e)return null;var r,a=n.defer(),c=angular.extend({sequential:1,debug:t.debug},e);return i.save({action:"create",json:c},null,function(e){o.errorHandler(e,"Unable to create contract pension",a)||(r=e.values,a.resolve(1==r.length?r[0]:null))},function(){a.reject("Unable to create contract pension")}),a.promise},model:function(e){function t(e){var t=0,n=e.length,o={};for(t;t<n;t++)o[e[t].name]="";return"undefined"!=typeof o.id&&(o.id=null),"undefined"!=typeof o.jobcontract_revision_id&&(o.jobcontract_revision_id=null),o}var o=n.defer();return e?o.resolve(t(e)):this.getFields().then(function(e){o.resolve(t(e))}),o.promise}}}])}),define("job-contract/controllers/contract-list",["common/angular","common/lodash","job-contract/controllers/controllers","job-contract/filters/get-obj-by-id","job-contract/services/contract-details","job-contract/services/contract-hour","job-contract/services/contract-health","job-contract/services/contract-leave","job-contract/services/contract-pay","job-contract/services/contract-pension","job-contract/services/utils","common/services/pub-sub"],function(e,t,n){"use strict";n.controller("ContractListCtrl",["$scope","$rootElement","$rootScope","$uibModal","$q","$filter","$sce","contractList","ContractService","ContractDetailsService","ContractHourService","ContractPayService","ContractLeaveService","ContractHealthService","ContractPensionService","UtilsService","settings","$log","pubSub","$window",function(t,n,o,r,i,a,c,s,l,u,d,f,p,v,h,m,_,b,y,g){b.debug("Controller: ContractListCtrl");var j,C={details:u,hour:d,pay:f,leave:p,health:v,pension:h},$={hoursLocation:m.getHoursLocation(),payScaleGrade:m.getPayScaleGrade(),absenceTypes:m.getAbsenceTypes()},w={},S={};t.contractListLoaded=!1,t.contractCurrent=[],t.contractPast=[],t.utils={contractListLen:s.length},t.tooltips={changeContractTerms:c.trustAsHtml('<div><p class="text-left"><strong>Change Contract Terms:</strong><br>When an employeees job or role changes, i.e. promotion, secondment or move,you can use this wizard to update the details of the contract and record a newrevision of the contract. A contract history is kept so you can always see theprevious version of the contract.</p><p class="text-left"><strong>Correct an error on the contract record:</strong><br>If you notice an issue or error with the job terms you can correct these withoutcreating a new job history record. These changes are not stored as a new revisionof the contract.</p></div>')};for(j in C)w[j]=C[j].getFields();i.all(w).then(function(e){t.fields=e,b.debug("FIELDS:"),b.debug(e);for(j in C)S[j]=C[j].model(e[j]);return i.all(S)}).then(function(n){t.model=n,b.debug("MODEL:"),b.debug(n),s=a("orderBy")(s,"-is_primary"),e.forEach(s,function(e){+e.is_current?t.contractCurrent.push(e):t.contractPast.push(e)}),t.$watchCollection("contractCurrent",function(){t.utils.contractListLen=t.contractCurrent.length+t.contractPast.length}),t.$watchCollection("contractPast",function(){t.utils.contractListLen=t.contractCurrent.length+t.contractPast.length}),o.$broadcast("hrjc-loader-hide"),t.contractListLoaded=!0}),i.all($).then(function(n){e.extend(t.utils,n)}),t.toggleIsPrimary=function(e){function n(t){var n=0,o=t.length;for(n;n<o;n++)if(+t[n].id!==+e&&+t[n].is_primary)return t[n].is_primary="0",t[n].id;return null}n(t.contractCurrent)||n(t.contractPast),(a("getObjById")(t.contractCurrent,e)||a("getObjById")(t.contractPast,e)||{}).is_primary="1",t.contractCurrent=a("orderBy")(t.contractCurrent,"-is_primary"),t.contractPast=a("orderBy")(t.contractPast,"-is_primary")},t.modalContract=function(o){if(!o||"new"!==o)return null;var a,c={appendTo:n.find("div").eq(0),templateUrl:_.pathApp+"views/modalForm.html?v=2222",size:"lg",controller:"ModalContractNewCtrl",windowClass:"modal-contract",resolve:{model:function(){return t.model},utils:function(){return i.all(e.extend($,{contractListLen:t.utils.contractListLen}))}}};a=r.open(c),a.result.then(function(e){l.updateHeaderInfo(),+e.is_current?t.contractCurrent.push(e):t.contractPast.push(e),+e.is_primary&&t.toggleIsPrimary(e.id),g.location.assign(m.getManageEntitlementsPageURL(e.contact_id))})},t.delete=function(e){function o(e,n){var o=0,r=e.length;for(o;o<r;o++)if(+e[o].id===+n)return t.$emit("hrjc-loader-hide"),e.splice(o,1),n;return null}var i=r.open({appendTo:n.find("div").eq(0),templateUrl:_.pathApp+"views/modalDialog.html",size:"sm",controller:"ModalDialogCtrl",resolve:{content:function(){return{msg:"Are you sure you want to delete this job contract?"}}}});i.result.then(function(n){n&&(t.$emit("hrjc-loader-show"),l.delete(e).then(function(n){n.is_error||(l.updateHeaderInfo(),o(t.contractCurrent,e)||o(t.contractPast,e),y.publish("contract:deleted",{contactId:_.contactId,contractId:e}),y.publish("contract-refresh"))}))})}}])}),define("job-contract/services/contact",["job-contract/services/services","job-contract/services/utils"],function(e){"use strict";e.factory("ContactService",["$resource","settings","$q","UtilsService","$log",function(e,t,n,o,r){r.debug("Service: ContactService");var i=e(t.pathRest,{action:"getlist",entity:"contact",json:{}});return{getOne:function(e){if(!e||"number"!=typeof+e)return null;var r,a=n.defer();return i.get({json:{id:e,debug:t.debug}},function(e){o.errorHandler(e,"Unable to fetch contact",a)||(r=e.values,a.resolve(1==r.length?r[0]:null))},function(){a.reject("Unable to fetch contact")}),a.promise},search:function(e,r){if(!e||"undefined"==typeof e||r&&"object"!=typeof r)return null;var a=n.defer(),r=r||{};return i.get({json:{input:e,params:r,debug:t.debug}},function(e){o.errorHandler(e,"Unable to fetch contact list",a)||a.resolve(e.values)},function(){a.reject("Unable to fetch contact list")}),a.promise}}}])}),define("job-contract/controllers/contract",["common/moment","job-contract/controllers/controllers","job-contract/services/contract-details","job-contract/services/contract-hour","job-contract/services/contract-pay","job-contract/services/contract-leave","job-contract/services/contract-pension","job-contract/services/contract-health","job-contract/services/contact","job-contract/services/utils","common/filters/angular-date/format-date"],function(e,t){"use strict";t.controller("ContractCtrl",["$scope","$route","$filter","$uibModal","$rootElement","$q","$window","settings","API","ContractService","ContractDetailsService","ContractHourService","ContractPayService","ContractLeaveService","ContractHealthService","ContractPensionService","ContractFilesService","ContactService","ContractRevisionList","$log","UtilsService",function(t,n,o,r,i,a,c,s,l,u,d,f,p,v,h,m,_,b,y,g,j){function C(e){var n={id:null,jobcontract_id:D,jobcontract_revision_id:e.details.jobcontract_revision_id};angular.extend(t.details,e.details),angular.extend(t.hour,e.hour||n),angular.extend(t.pay,e.pay||n),e.health&&e.health.provider&&e.health.provider!=t.health.provider&&b.getOne(e.health.provider).then(function(e){t.health.provider_contact=e}),e.health&&e.health.provider_life_insurance&&e.health.provider_life_insurance!=t.health.provider_life_insurance&&b.getOne(e.health.provider_life_insurance).then(function(e){t.health.provider_life_insurance_contact=e}),angular.extend(t.health,e.health||n),angular.extend(t.pension,e.pension||n),angular.forEach(t.leave,function(t,o){angular.extend(t,e.leave?e.leave[o]||n:n)})}function $(n){var o=!n||e().diff(n,"day")<=0,r=t.$parent.contract,i=t.$parent.contractCurrent,a=t.$parent.contractPast,c=i.indexOf(r),s=a.indexOf(r);o?(r.is_current="1",c+1?angular.extend(i[c],r):(a.splice(s),i.push(r))):(r.is_current="0",s+1?angular.extend(a[s],r):(a.push(r),i.splice(c)))}function w(){return S=a.all({details:_.get(t.details.jobcontract_revision_id,"civicrm_hrjobcontract_details"),pension:_.get(t.pension.jobcontract_revision_id,"civicrm_hrjobcontract_pension")}),S.then(function(e){t.files=e}),S}g.debug("Controller: ContractCtrl");var S,R=this,D=t.contract.id;t.contractLoaded=!1,t.revisionsShown=!1,t.isCollapsed=!0,t.files={},t.revisionCurrent={},t.revisionList=[],t.revisionDataList=[],angular.extend(t,angular.copy(t.model)),u.fullDetails(D).then(function(e){C(e),t.contractLoaded=!0,t.$watch("contract.is_primary",function(){t.isCollapsed=!+t.contract.is_primary}),t.$broadcast("hrjc-loader-show"),y.fetchRevisions(D).then(function(e){t.revisionList=e.revisionList,t.revisionDataList=e.revisionDataList,t.$broadcast("hrjc-loader-hide")})}).then(w),R.fetchRevisionDetails=function(e){return a.all([d.getOne({jobcontract_revision_id:e.details_revision_id}),f.getOne({jobcontract_revision_id:e.hour_revision_id}),h.getOne({jobcontract_revision_id:e.health_revision_id}),p.getOne({jobcontract_revision_id:e.pay_revision_id}),m.getOne({jobcontract_revision_id:e.pension_revision_id}),v.getOne({jobcontract_revision_id:e.leave_revision_id})]).then(function(e){var n={details:e[0],hour:e[1],health:e[2],pay:e[3],pension:e[4],leave:e[5]},o={contract:t.contract};return angular.extend(o,angular.copy(t.model)),angular.extend(o.details,n.details),angular.extend(o.hour,n.hour),angular.extend(o.health,n.health),angular.extend(o.pay,n.pay),angular.extend(o.pension,n.pension),angular.forEach(o.leave,function(e,t){angular.extend(e,n.leave?n.leave[t]:"")}),o})},t.modalContract=function(n,o){t.$broadcast("hrjc-loader-show");var l,d={controller:"ModalContractCtrl",appendTo:i.find("div").eq(0),templateUrl:s.pathApp+"views/modalForm.html?v=4448",windowClass:"modal-contract",size:"lg",resolve:{action:function(){return n||"view"},content:function(){return null},entity:function(){return o?R.fetchRevisionDetails(o):{contract:t.contract,details:t.details,hour:t.hour,pay:t.pay,leave:t.leave,health:t.health,pension:t.pension}},files:function(){return o?a.all({details:_.get(o.details_revision_id,"civicrm_hrjobcontract_details"),pension:_.get(o.pension_revision_id,"civicrm_hrjobcontract_pension")}):S},utils:function(){return t.utils}}};switch(n){case"edit":d.resolve.content=function(){return{allowSave:!0,isDisabled:!1,copy:{close:"Cancel",save:"Save without making a new revision",title:"Edit contract"}}};break;case"change":d.resolve.content=function(){return{allowSave:!0,isDisabled:!1,copy:{close:"Cancel",save:"Save and make a new revision",title:"Change contract terms"}}}}l=r.open(d),l.result.then(function(n){if(n){if(u.updateHeaderInfo(),C(n),$(n.details.period_end_date),n.revisionCreated){var o=e(new Date(n.revisionCreated.effective_date)),r=e(new Date(t.revisionCurrent.effective_date)),i=e(),s={revisionEntityIdObj:n.revisionCreated,details:n.details,hour:n.hour,pay:n.pay},l=r.diff(i,"day")<=0||r.diff(o,"day")<=0;n.files&&(l?w().then(function(e){s.files=e}):a.all({details:_.get(n.revisionCreated.details_revision_id,"civicrm_hrjobcontract_details")}).then(function(e){s.files=e})),t.revisionList.unshift(n.revisionCreated),t.revisionDataList.unshift(s)}else{var d,f,p=["details","hour","pay"];t.contract.is_primary!=n.contract.is_primary&&t.$parent.$parent.toggleIsPrimary(t.contract.id),angular.forEach(t.revisionDataList,function(e){for(d=0,f={};p[d];)e.revisionEntityIdObj[p[d]+"_revision_id"]==t.revisionCurrent[p[d]+"_revision_id"]&&(f[p[d]]=n[p[d]],"details"==p[d]&&n.files&&w().then(function(t){f.files=t,angular.extend(e,f)}),angular.extend(e,f)),d++})}CRM.refreshParent("#hrjobroles"),c.location.assign(j.getManageEntitlementsPageURL(t.contract.contact_id))}})},t.showRevisions=function(){t.revisionsShown=!0},t.modalRevision=function(e){if(t.$broadcast("hrjc-loader-show"),!e)return null;var n=[],c="leave"!=e?"getOne":"get",u=0,d=t.revisionList.length;for(u;u<d;u++)n.push(l[c]("HRJob"+o("capitalize")(e),{jobcontract_revision_id:t.revisionList[u][e+"_revision_id"]}));var f={appendTo:i.find("div").eq(0),size:"lg",controller:"ModalRevisionCtrl",templateUrl:s.pathApp+"views/modalRevision.html?v=1234",windowClass:"modal-revision",resolve:{entity:function(){return e},fields:function(){return t.$parent.$parent.fields[e]},model:function(){return t.model[e]},utils:function(){return t.utils},revisionDataList:function(){return a.all(n)},revisionList:function(){return t.revisionList},modalContract:function(){return t.modalContract}}};return r.open(f)},t.$on("updateContractView",function(){t.$broadcast("hrjc-loader-show"),u.fullDetails(t.revisionCurrent.jobcontract_id).then(function(e){C(e),t.$broadcast("hrjc-loader-hide")}).then(w)})}])}),define("job-contract/services/contract",["job-contract/services/services"],function(e){"use strict";e.factory("Contract",["$resource","settings","$log",function(e,t,n){return n.debug("Service: Contract"),e(t.pathRest,{action:"get",entity:"HRJobContract",json:{}})}]),e.factory("ContractService",["$log","$q","Contract","ContractRevisionService","settings","UtilsService","DOMEventTrigger",function(e,t,n,o,r,i,a){function c(e){angular.forEach(e.leave,function(e){e.add_public_holidays=!!parseInt(e.add_public_holidays)})}return e.debug("Service: ContractService"),{get:function(e){var o=t.defer(),a={};return CRM&&CRM.jobContractTabApp&&CRM.jobContractTabApp.contractList?o.resolve(CRM.jobContractTabApp.contractList):(a={sequential:1,contact_id:r.contactId,deleted:0},e&&"number"==typeof+e&&(a.contact_id=e),n.get({json:a},function(e){i.errorHandler(e,"Unable to fetch contract list",o)||o.resolve(e.values)},function(){o.reject("Unable to fetch contract list")})),o.promise},getCurrentContract:function(e){var o=t.defer();return n.get({action:"getcurrentcontract",json:{contact_id:e}},function(e){e.is_error&&o.reject("Unable to fetch the current contract"),o.resolve(e.values)},function(){o.reject("Unable to fetch the current contract")}),o.promise},updateHeaderInfo:function(){this.getCurrentContract(r.contactId).then(function(e){a("updateContactHeader",{contract:e})}).catch(function(e){console.log(e)})},getOne:function(e,o){if(!e||"number"!=typeof+e)return null;var i,a=t.defer(),c={deleted:0,sequential:1,contact_id:r.contactId,id:e};return o&&"number"==typeof+o&&(c.contact_id=o),n.get({json:c},function(e){i=e.values,a.resolve(1==i.length?i[0]:null)},function(){a.reject("Unable to fetch contract data")}),a.promise},getRevision:function(e){if(!e||"number"!=typeof+e)return null;var n=t.defer(),r={deleted:0,options:{limit:0},sequential:1,jobcontract_id:e};return o.get({json:r},function(e){n.resolve(e.values)},function(){n.reject("Unable to fetch contract revisions")}),n.promise},getRevisionOptions:function(e,n){var o,i=t.defer();if(!n){var o=r.CRM.options.HRJobContractRevision||{};e&&"string"==typeof e&&(o=o[optionGroup]),i.resolve(o||{})}return i.promise},save:function(e){if(!e||"object"!=typeof e||!e.id||"number"!=typeof+e.id)return null;var o,r=t.defer(),i=angular.extend({deleted:0,sequential:1},e);return n.save({action:"create",json:i},null,function(e){o=e.values,r.resolve(1==o.length?o[0]:null)},function(){r.reject("Unable to fetch contract contract data")}),r.promise},saveRevision:function(e){if(!e||"object"!=typeof e||!e.id||"number"!=typeof+e.id)return null;var n,r=t.defer(),i=angular.extend({deleted:0,sequential:1},e);return o.save({action:"create",json:i},null,function(e){n=e.values,r.resolve(1==n.length?n[0]:null)},function(){r.reject("Unable to fetch contract revision")}),r.promise},delete:function(e){if(!e||"number"!=typeof+e)return null;var o=t.defer();
return n.delete({action:"deletecontract",json:{id:e}},function(e){o.resolve(e)},function(){o.reject("Could not delete contract ID:"+e)}),o.promise},deleteRevision:function(e){if(!e||"number"!=typeof+e)return null;var n,r=t.defer();return o.save({action:"create",json:{sequential:1,deleted:1,id:e}},null,function(e){n=e.values,r.resolve(1==n.length?n[0]:null)},function(){r.reject("Unable to delete contract revision id: "+e)}),r.promise},fullDetails:function(e){if(!e||"number"!=typeof+e)return null;var o=t.defer();return n.get({action:"getfulldetails",json:{jobcontract_id:e}},function(e){c(e),o.resolve(e)},function(){o.reject("Could not fetch full details for contract ID:"+e)}),o.promise}}}])}),define("job-contract/controllers/revision-list",["common/lodash","job-contract/controllers/controllers","job-contract/services/contract"],function(e,t){"use strict";t.controller("RevisionListCtrl",["$rootScope","$scope","$filter","$q","$uibModal","$rootElement","settings","ContractService","ContractDetailsService","ContractHourService","ContractPayService","ContractFilesService","$log","ContractRevisionService","ContractRevisionList",function(e,t,n,o,r,i,a,c,s,l,u,d,f,p,v){function h(){t.revisionDataList||(t.$broadcast("hrjc-loader-show"),v.fetchRevisions(b).then(function(e){t.revisionList=e.revisionList,t.revisionDataList=e.revisionDataList,t.$broadcast("hrjc-loader-hide")}))}function m(){var e,o=0;if(t.revisionList.length){var r=n("orderBy")(t.revisionList,["effective_date","id"]);if(angular.forEach(r,function(t){new Date(t.effective_date).setHours(0,0,0,0)<=(new Date).setHours(0,0,0,0)&&(e=t)}),!e)do e=r[o],o++;while(r[o]&&r[o-1].effective_date==r[o].effective_date);return angular.extend(t.revisionCurrent,e),e.id}return null}function _(){var e=a.pathReport+(a.pathReport.indexOf("?")>-1?"&":"?"),n=t.fields;return angular.forEach(n,function(t,n){e+="fields["+n+"_revision_id]=1&",angular.forEach(t,function(t){e+="fields["+n+"_"+t.name+"]=1&"})}),e+="fields[sort_name]=1&fields[first_name]=1&fields[last_name]=1&fields[external_identifier]=1&fields[email]=1&fields[street_address]=1&fields[city]=1&fields[name]=1&fields[contract_contact_id]=1&fields[contract_contract_id]=1&fields[jobcontract_revision_id]=1&fields[change_reason]=1&fields[created_date]=1&fields[effective_date]=1&fields[modified_date]=1&order_bys[1][column]=id&order_bys[1][order]=ASC&order_bys[2][column]=civicrm_hrjobcontract_revision_revision_id&order_bys[2][order]=ASC&order_bys[3][column]=-&order_bys[3][order]=ASC&order_bys[4][column]=-&order_bys[4][order]=ASC&order_bys[5][column]=-&order_bys[5][order]=ASC&contract_id_op=eq&permission=access+CiviReport&row_count=&_qf_Summary_submit_csv=Preview+CSV&groups=&contract_id_value="+b+"&group_bys[civicrm_hrjobcontract_revision_revision_id]=1"}f.debug("Controller: RevisionListCtrl");var b=t.contract.id,y=t.revisionDataList;t.currentPage=1,t.itemsPerPage=5,t.maxSize=5,t.changeReasons=e.options.contract.change_reason,t.sortCol="revisionEntityIdObj.effective_date",t.sortReverse=!0,t.display={effectiveDate:!0,position:!0,payScale:!0,totalSalary:!0,hours:!0,placeOfWork:!0,recordedBy:!0,changeReason:!0},h(),t.createPage=function(){var e=(t.currentPage-1)*t.itemsPerPage,n=e+t.itemsPerPage;t.revisionDataListPage=y.slice(e,n)},t.sortBy=function(e,o){"undefined"!=typeof e&&(t.sortCol==e?t.sortReverse=!t.sortReverse:t.sortCol=e),"undefined"!=typeof o&&(t.sortReverse=o),y=n("orderBy")(t.revisionDataList,t.sortCol,t.sortReverse)},t.urlCSV=_(),t.deleteRevision=function(e,n){if(1==t.revisionList.length)return void n.stopPropagation();if(e&&"number"==typeof+e){var o=r.open({appendTo:i.find("div").eq(0),templateUrl:a.pathApp+"views/modalDialog.html",size:"sm",controller:"ModalDialogCtrl",resolve:{content:function(){return{msg:"Are you sure you want to delete this job contract revision?"}}}});o.result.then(function(n){n&&(t.$broadcast("hrjc-loader-show"),c.deleteRevision(e).then(function(n){var o=0,r=t.revisionList.length;if(!n.is_error){for(o;o<r;o++)if(t.revisionList[o].id==e){t.revisionList.splice(o,1),t.revisionDataList.splice(o,1);break}if(t.sortBy(),t.createPage(),t.revisionCurrent.id!=m())return void t.$emit("updateContractView");t.$broadcast("hrjc-loader-hide")}}))})}},t.modalRevisionEdit=function(e){var n=e.effective_date,o=e.change_reason,s=r.open({appendTo:i.find("div").eq(0),templateUrl:a.pathApp+"views/modalChangeReason.html?v="+(new Date).getTime(),controller:"ModalChangeReasonCtrl",resolve:{content:function(){return{copy:{title:"Edit revision data"}}},date:function(){return n},reasonId:function(){return o}}});s.result.then(function(r){r.date==n&&r.reasonId==o||c.saveRevision({id:e.id,change_reason:r.reasonId,effective_date:r.date}).then(function(){e.effective_date=r.date,e.change_reason=r.reasonId,t.sortBy(),t.createPage(),t.revisionCurrent.id!=m()&&t.$emit("updateContractView")})})},t.$watch("currentPage",function(){t.createPage()}),t.$watch("revisionDataList.length",function(e,n){y=t.revisionDataList,e>n&&m(),t.sortBy(),t.createPage()})}])}),define("job-contract/controllers/modal/modal-change-reason",["common/moment","job-contract/controllers/controllers","job-contract/services/contract"],function(e,t){"use strict";t.controller("ModalChangeReasonCtrl",["$scope","$log","$uibModalInstance","content","date","reasonId","settings","ContractRevisionService",function(t,n,o,r,i,a,c,s){n.debug("Controller: ModalChangeReasonCtrl");var r=r||{},l=r.copy||{};l.title=l.title||"Revision data",t.change_reason=a||"",t.copy=l,t.effective_date=i||"",t.isPast=!1,t.dpOpen=function(e,n){e.preventDefault(),e.stopPropagation(),t[n]=!0},t.save=function(){s.validateEffectiveDate({contact_id:c.contactId,effective_date:t.effective_date}).then(function(n){n.success?o.close({reasonId:t.change_reason,date:t.effective_date?e(t.effective_date).format("YYYY-MM-DD"):""}):(CRM.alert(n.message,"Error","error"),t.$broadcast("hrjc-loader-hide"))})},t.cancel=function(){o.dismiss("cancel")},t.$watch("effective_date",function(e){t.isPast=new Date(e).setHours(0,0,0,0)<(new Date).setHours(0,0,0,0)})}])}),define("job-contract/services/contract-revision",["common/lodash","job-contract/services/services","job-contract/services/utils"],function(e,t){"use strict";t.factory("ContractRevisionService",["$filter","$resource","settings","$q","UtilsService","$log",function(t,n,o,r,i,a){function c(e){var n=t("formatDate")(e,"YYYY-MM-DD");return"Unspecified"!==n?n:e}return a.debug("Service: ContractRevisionService"),e.assign(n(o.pathRest,{action:"get",entity:"HRJobContractRevision",json:{}}),{validateEffectiveDate:function(e){return e.effective_date=c(e.effective_date),e.sequential=0,e.debug=o.debug,this.save({action:"validateeffectivedate",json:e},null).$promise.then(function(e){return e.values})}})}])}),define("job-contract/services/contract-files",["job-contract/services/services","job-contract/services/utils"],function(e){"use strict";e.factory("ContractFilesService",["$resource","settings","$q","UtilsService","FileUploader","$log",function(e,t,n,o,r,i){i.debug("Service: ContractFilesService");var a=e(t.pathFile+":action");return r.prototype.queueDelete=[],{delete:function(e,t,r){if(!e||"number"!=typeof+e||!t||"number"!=typeof+t||!r||"string"!=typeof r)return null;var i=n.defer();return a.save({action:"delete",entityTable:r,entityID:t,fileID:e},null,function(e){e.values&&!+e.values[0].result&&(e.is_error=1),o.errorHandler(e,"Unable to delete file",i)||i.resolve(e.values[0])},function(){i.reject("Unable to delete file")}),i.promise},get:function(e,t){if(!e||"number"!=typeof+e||!t||"string"!=typeof t)return null;var r=n.defer();return a.get({action:"list",entityTable:t,entityID:e},function(e){o.errorHandler(e,"Unable to fetch files",r)||r.resolve(e.values)},function(){r.reject("Unable to fetch files")}),r.promise},uploader:function(e,n){if(!e||"string"!=typeof e)return null;var o={url:t.pathFile+"upload",formData:[{entityTable:e}]};return n&&"number"==typeof n&&(o.queueLimit=n),new r(o)},upload:function(e,t){if(!e||"object"!=typeof e||!t||"number"!=typeof+t)return null;var o=n.defer(),r=[];return e.onBeforeUploadItem=function(e){e.formData.push({entityID:t})},e.onCompleteItem=function(e,t){r.push(t)},e.onErrorItem=function(e,t,n,r){o.reject("Could not upload file: "+e.file.name),i.error(" ===== Item Error: "+n+" ======"),i.error(" =====  - item ======"),i.error(e),i.error(" =====  - response ======"),i.error(t),i.error(" =====  - headers ======"),i.error(r)},e.onCompleteAll=function(){o.resolve(r)},e.uploadAll(),o.promise}}}])}),define("job-contract/controllers/modal/modal-contract",["common/angular","common/lodash","job-contract/controllers/controllers","job-contract/services/contract","job-contract/services/contract-revision","job-contract/services/contract-details","job-contract/services/contract-hour","job-contract/services/contract-pay","job-contract/services/contract-leave","job-contract/services/contract-health","job-contract/services/contract-pension","job-contract/services/contract-files","job-contract/services/utils","common/services/pub-sub"],function(e,t,n){"use strict";n.controller("ModalContractCtrl",["$scope","$uibModal","$uibModalInstance","$q","$rootElement","$rootScope","$filter","ContractService","ContractRevisionService","ContractDetailsService","ContractHourService","ContractPayService","ContractLeaveService","ContractHealthService","ContractPensionService","ContractFilesService","action","entity","content","files","UtilsService","utils","settings","$log","pubSub",function(n,o,r,i,a,c,s,l,u,d,f,p,v,h,m,_,b,y,g,j,C,$,w,S,R){function D(){if(e.equals(y,n.entity)&&e.equals(j,n.files)&&!n.uploader.details.contract_file.queue.length&&!n.uploader.pension.evidence_file.queue.length)return n.$broadcast("hrjc-loader-hide"),void r.dismiss("cancel");switch(b){case"edit":n.entity.contract.is_primary===y.contract.is_primary?U().then(function(e){switch(e){case"edit":E();break;case"change":L().then(function(e){F(e.reasonId,e.date)})}}):E();break;case"change":L().then(function(e){F(e.reasonId,e.date)});break;default:n.$broadcast("hrjc-loader-hide"),r.dismiss("cancel")}}function P(){var e=o.open({appendTo:a.find("div").eq(0),size:"sm",templateUrl:w.pathApp+"views/modalDialog.html?v="+(new Date).getTime(),controller:"ModalDialogCtrl",resolve:{content:{title:"Update leave entitlements?",msg:"The system will now update the staff member leave entitlement.",copyConfirm:"Proceed"}}});return e.result}function M(e){var t=s("formatDate")(e,Date);return"Unspecified"!==t?t:e}function L(){var e=o.open({appendTo:a.find("div").eq(0),templateUrl:w.pathApp+"views/modalChangeReason.html?v="+(new Date).getTime(),controller:"ModalChangeReasonCtrl",resolve:{content:function(){return{copy:{title:A.title}}},date:null,reasonId:null}});return e.result}function U(){var e=o.open({appendTo:a.find("div").eq(0),templateUrl:w.pathApp+"views/modalConfirmEdit.html?v="+(new Date).getTime(),controller:"ModalDialogCtrl",resolve:{content:function(){return{msg:"Save without making a new revision?"}}}});return e.result}function E(){n.$broadcast("hrjc-loader-show"),n.entity.details.period_end_date=n.entity.details.period_end_date||"";var t,c,s,u,b,y=e.copy(n.entity),g=n.filesTrash,j=n.uploader,C={contract:l.save(y.contract),details:d.save(y.details),hour:f.save(y.hour),pay:p.save(y.pay),leave:v.save(y.leave),health:h.save(y.health),pension:m.save(y.pension)},$=[],S=[];for(t in g)for(s=0,u=g[t].length,s;s<u;s++)c=g[t][s],S.push(_.delete(c.fileID,c.entityID,c.entityTable));e.extend(C,{files:!!S.length&&i.all(S)}),i.all(C).then(function(t){return e.forEach(j,function(t){e.forEach(t,function(t){e.forEach(t.queue,function(e){e.file.size>n.fileMaxSize&&e.remove()})})}),j.details.contract_file.queue.length&&$.push(_.upload(j.details.contract_file,y.details.jobcontract_revision_id)),j.pension.evidence_file.queue.length&&$.push(_.upload(j.pension.evidence_file,y.pension.jobcontract_revision_id)),t.details.period_start_date=y.details.period_start_date,t.details.period_end_date=y.details.period_end_date,t.pay.annual_benefits=y.pay.annual_benefits,t.pay.annual_deductions=y.pay.annual_deductions,$.length?(b=o.open({appendTo:a.find("div").eq(0),templateUrl:w.pathApp+"views/modalProgress.html?v="+(new Date).getTime(),size:"sm",controller:"ModalProgressCtrl",resolve:{uploader:function(){return j},promiseFilesUpload:function(){return $}}}),t.files=b.result,i.all(t)):t}).then(function(e){n.$broadcast("hrjc-loader-hide"),r.close(e),R.publish("contract-refresh")},function(e){n.$broadcast("hrjc-loader-hide"),CRM.alert(e,"Error","error")})}function F(e,t){n.$broadcast("hrjc-loader-show"),u.validateEffectiveDate({contact_id:w.contactId,effective_date:t}).then(function(o){o.success?q(e,t):(CRM.alert(o.message,"Error","error"),n.$broadcast("hrjc-loader-hide"))},function(e){})}function q(t,c){var s,u,b,g,j,$,S,D,P,M,L=[],U=e.copy(n.entity),E=n.filesTrash,F=n.uploader,q=0,I=0,A=0,H={},T=[],x=[],O={details:d,hour:f,pay:p,leave:v,health:h,pension:m};for(s in O){if(S=!e.equals(y[s],U[s]),!S&&(S=!!E[s]&&!!E[s].length,!S&&F[s]))for(g in F[s])if(b=F[s][g],b.queue.length){S=!0;break}S&&(L[A]={},L[A].name=s,L[A].data=U[s],L[A].service=O[s],A++,q=A)}q?(C.prepareEntityIds(L[0].data,y.contract.id),L[0].service.save(L[0].data).then(function(n){for(A=1,M=e.isArray(n)?n[0].jobcontract_revision_id:n.jobcontract_revision_id,H[L[0].name]=n,A;A<q;A++)s=L[A].name,C.prepareEntityIds(L[A].data,y.contract.id,M),H[s]=L[A].service.save(L[A].data);return i.all(e.extend(H,{revisionCreated:l.saveRevision({id:M,change_reason:t,effective_date:c})},{files:!1}))}).then(function(t){for(s in O)if(t[s]=t[s]||U[s],E[s]&&E[s].length)for(A=0,u=E[s].length,A;A<u;A++)j=E[s][A],T.push(_.delete(j.fileID,M,j.entityTable));return t.details.period_start_date=U.details.period_start_date,t.details.period_end_date=U.details.period_end_date,t.revisionCreated.effective_date=c||"",t.pay.annual_benefits=U.pay.annual_benefits,t.pay.annual_deductions=U.pay.annual_deductions,e.extend(t.revisionCreated,{details_revision_id:t.details.jobcontract_revision_id,health_revision_id:t.health.jobcontract_revision_id,hour_revision_id:t.hour.jobcontract_revision_id,jobcontract_id:y.contract.id,leave_revision_id:t.leave[0].jobcontract_revision_id,pay_revision_id:t.pay.jobcontract_revision_id,pension_revision_id:t.pension.jobcontract_revision_id}),T.length?(t.files=i.all(T),i.all(t)):t}).then(function(e){for(A=0;A<q;A++)if(s=L[A].name,F[s])for(g in F[s]){for(b=F[s][g],I=b.queue.length,$=0;$<I;$++)D=b.queue[$],D.file.size>n.fileMaxSize&&(D.remove(),$--,I--);I&&x.push(_.upload(b,M))}return x.length?(P=o.open({appendTo:a.find("div").eq(0),templateUrl:w.pathApp+"views/modalProgress.html",size:"sm",controller:"ModalProgressCtrl",resolve:{uploader:function(){return F},promiseFilesUpload:function(){return x}}}),e.files=P.result,i.all(e)):e}).then(function(e){n.$broadcast("hrjc-loader-hide"),r.close(e),R.publish("contract-refresh")})):(n.$broadcast("hrjc-loader-hide"),r.close())}function I(){return i.all([{name:"hrjobcontract_health_health_plan_type",key:"plan_type"},{name:"hrjobcontract_health_life_insurance_plan_type",key:"plan_type_life_insurance"}].map(function(e){h.getOptions(e.name,!0).then(function(n){c.options.health[e.key]=t.transform(n,function(e,t){e[t.key]=t.value},{})})}))}S.debug("Controller: ModalContractCtrl");var A=g.copy||{};A.close=A.close||"Close",A.save=A.save||"Save changes",A.title=A.title||"Contract",n.action=b||"view",n.allowSave="undefined"!=typeof g.allowSave&&g.allowSave,n.copy=A,n.entity={},n.fileMaxSize=w.CRM.maxFileSize||0,n.files={},n.filesTrash={},n.isDisabled="undefined"==typeof g.isDisabled||g.isDisabled,n.isPrimaryDisabled=+y.contract.is_primary,n.showIsPrimary=$.contractListLen>1&&"change"!==b,n.uploader={details:{contract_file:_.uploader("civicrm_hrjobcontract_details")},pension:{evidence_file:_.uploader("civicrm_hrjobcontract_pension",1)}},n.utils=$,e.copy(y,n.entity),e.copy(j,n.files),n.entity.details.period_start_date=M(n.entity.details.period_start_date),n.entity.details.period_end_date=M(n.entity.details.period_end_date),function(){e.forEach(n.files,function(e,t){n.filesTrash[t]=[]}),r.opened.then(function(){c.$broadcast("hrjc-loader-hide")}),e.forEach(n.uploader,function(t){e.forEach(t,function(e){e.onAfterAddingAll=function(){n.filesValidate()}})}),c.$broadcast("hrjc-loader-show"),I().then(function(){c.$broadcast("hrjc-loader-hide")})}(),n.cancel=function(){if("view"===b||e.equals(y,n.entity)&&e.equals(j,n.files)&&!n.uploader.details.contract_file.queue.length&&!n.uploader.pension.evidence_file.queue.length)return n.$broadcast("hrjc-loader-hide"),void r.dismiss("cancel");w.debug&&e.forEach(y,function(t,o){e.equals(t,n.entity[o])||(S.debug("======================"),S.debug("Changed entity: "+o),S.debug("Before:"),S.debug(t),S.debug("After:"),S.debug(n.entity[o]))});var t=o.open({appendTo:a.find("div").eq(0),templateUrl:w.pathApp+"views/modalDialog.html?v="+(new Date).getTime(),size:"sm",controller:"ModalDialogCtrl",resolve:{content:function(){return{copyCancel:"No",title:"Alert",msg:"Are you sure you want to cancel? Changes will be lost!"}}}});t.result.then(function(e){e&&(n.$broadcast("hrjc-loader-hide"),r.dismiss("cancel"))})},n.fileMoveToTrash=function(e,t){var o=n.files[t],r=n.filesTrash[t];r.push(o[e]),o.splice(e,1)},n.filesValidate=function(){var e,t,o,r,i,a,c,s=n.fileMaxSize,l=n.uploader,u=!0;for(e in l){i=l[e];for(t in i)for(o=0,r=c.length,a=i[t],c=a.queue;o<r&&u;o++)u=c[o].file.size<s}n.contractForm.$setValidity("maxFileSize",u)},n.allowSave&&(n.save=function(){n.$broadcast("hrjc-loader-show"),d.validateDates({contact_id:w.contactId,period_start_date:n.entity.details.period_start_date,period_end_date:n.entity.details.period_end_date,jobcontract_id:y.contract.id}).then(function(e){e.success?P().then(function(){D()}):(CRM.alert(e.message,"Error","error"),n.$broadcast("hrjc-loader-hide"))},function(e){}),n.$broadcast("hrjc-loader-hide")})}])}),define("job-contract/controllers/modal/modal-contract-new",["common/angular","common/lodash","common/moment","job-contract/controllers/controllers","job-contract/services/contract","job-contract/services/contract-details","job-contract/services/contract-hour","job-contract/services/contract-pay","job-contract/services/contract-leave","job-contract/services/contract-health","job-contract/services/contract-pension","job-contract/services/contract-files","job-contract/services/utils","common/services/pub-sub"],function(e,t,n,o){"use strict";o.controller("ModalContractNewCtrl",["$rootScope","$scope","$uibModalInstance","$q","$uibModal","$rootElement","$sce","Contract","ContractService","ContractDetailsService","ContractHourService","ContractPayService","ContractLeaveService","ContractHealthService","ContractPensionService","ContractFilesService","model","UtilsService","utils","settings","$log","pubSub",function(o,r,i,a,c,s,l,u,d,f,p,v,h,m,_,b,y,g,j,C,$,w){function S(){var e=c.open({appendTo:s.find("div").eq(0),size:"sm",templateUrl:C.pathApp+"views/modalDialog.html?v="+(new Date).getTime(),controller:"ModalDialogCtrl",resolve:{content:{title:"Update leave entitlements?",msg:"The system will now update the staff member leave entitlement.",copyConfirm:"Proceed"}}});return e.result}function R(){var t=new u;t.$save({action:"create",json:{sequential:1,contact_id:C.contactId,is_primary:j.contractListLen?r.entity.contract.is_primary:1}},function(t){var o,l,u,y=t.values[0],j=y.id,$=e.copy(r.entity.details),S=r.entity.hour,R=r.entity.pay,D=r.entity.leave,P=r.entity.health,M=r.entity.pension,L=[],U=r.uploader;y.is_current=!$.period_end_date||n().diff($.period_end_date,"day")<=0,g.prepareEntityIds($,j),f.save($).then(function(e){u=e.jobcontract_revision_id},function(e){return CRM.alert(e,"Error","error"),d.delete(j),i.dismiss(),a.reject()}).then(function(){return e.forEach(r.entity,function(e){g.prepareEntityIds(e,j,u)}),l=[p.save(S),v.save(R),h.save(D),m.save(P),_.save(M)],r.uploader.details.contract_file.queue.length&&L.push(b.upload(U.details.contract_file,u)),r.uploader.pension.evidence_file.queue.length&&L.push(b.upload(U.pension.evidence_file,u)),L.length&&(o=c.open({appendTo:s.find("div").eq(0),templateUrl:C.pathApp+"views/modalProgress.html",size:"sm",controller:"ModalProgressCtrl",resolve:{uploader:function(){return U},promiseFilesUpload:function(){return L}}}),l.push(o.result)),a.all(l)}).then(function(){r.$broadcast("hrjc-loader-hide"),i.close(y),w.publish("contract:created",C.contactId),w.publish("contract-refresh")},function(e){CRM.alert(e,"Error","error"),d.delete(j).then(function(e){r.$broadcast("hrjc-loader-hide"),e.is_error&&CRM.alert(e.error_message||"Unknown error","Error","error")},function(e){r.$broadcast("hrjc-loader-hide"),CRM.alert(e||"Unknown error","Error","error")})})},function(e){return r.$broadcast("hrjc-loader-hide"),i.dismiss(),CRM.alert(e.statusText||"Unknown error","Error","error"),a.reject()})}function D(){return a.all([{name:"hrjobcontract_health_health_plan_type",key:"plan_type"},{name:"hrjobcontract_health_life_insurance_plan_type",key:"plan_type_life_insurance"}].map(function(e){m.getOptions(e.name,!0).then(function(n){o.options.health[e.key]=t.transform(n,function(e,t){e[t.key]=t.value},{})})}))}function P(){r.entity.leave&&r.entity.leave.forEach(function(e,t){var n=r.entity.leave[t].leave_type;r.entity.leave[t].leave_amount=j.absenceTypes[n].default_entitlement,r.entity.leave[t].add_public_holidays=j.absenceTypes[n].add_public_holiday_to_entitlement})}$.debug("Controller: ModalContractNewCtrl"),r.allowSave=!0,r.action="new",r.copy={close:"Cancel",save:"Add New Job Contract",title:"Add New Job Contract"},r.entity={},r.isDisabled=!1,r.showIsPrimary=j.contractListLen,r.fileMaxSize=C.CRM.maxFileSize||0,r.uploader={details:{contract_file:b.uploader("civicrm_hrjobcontract_details")},pension:{evidence_file:b.uploader("civicrm_hrjobcontract_pension",1)}},r.utils=j,e.copy(y,r.entity),r.entity.contract={is_primary:0},P(),r.tooltips={fileSize:l.trustAsHtml("<p>THE FILE IS TOO LARGE AND CANNOT BE UPLOADED. PLEASE REDUCE THE SIZE OF THE FILE AND TRY AGAIN.</p>"),fte:l.trustAsHtml("<div><strong>FTE</strong> stands forFull Time Equivalent. This is a useful measure foran organisation that has peopleworking part-time.For a full-time person, FTE is always equal to1.0, whereas for a part-time person, the FTE will representthe fraction of standard hours that the person works on aregular basis.<br>E.g. if the standard working day at an organisationcomprises of 8 hours, then a person who regularly works for8 hours each day would be considered to be full- time andwould have an FTE value of 1.0. A person who regularly worksfor only 4 hours each day would be considered to be apart-time person and would have an FTE value of 0.5. If theorganisation had 10 people, each with an FTE of 1.0 theactual headcount of full-time people would be 10 and theFTE headcount (equal to actual headcount multiplied by theFTE value) would also be 10. However, if the organisationhad another 10 people who each worked part-time with an FTEvalue of 0.5 the actual headcount of part-time people wouldbe 10 while the FTE headcount would only be 5. Thus for anorganisation that had a total of 10 full-time people, and 10part-time people (each with an FTE of 0.5) the actualheadcount for the organisation would be 20 while the FTEheadcount would be 15.</div>")},function(){e.forEach(r.uploader,function(t){e.forEach(t,function(e){e.onAfterAddingAll=function(){r.filesValidate()}})}),o.$broadcast("hrjc-loader-show"),D().then(function(){o.$broadcast("hrjc-loader-hide")})}(),r.filesValidate=function(){var e,t,n,o,i,a,c,s=r.fileMaxSize,l=!0,u=r.uploader;for(e in u){i=u[e];for(t in i)for(n=0,o=c.length,a=i[t],c=a.queue;n<o&&l;n++)l=c[n].file.size<s}r.contractForm.$setValidity("maxFileSize",l)},r.cancel=function(){i.dismiss("cancel")},r.save=function(){r.$broadcast("hrjc-loader-show"),f.validateDates({contact_id:C.contactId,period_start_date:r.entity.details.period_start_date,period_end_date:r.entity.details.period_end_date}).then(function(e){e.success?S().then(function(){R()},function(){r.$broadcast("hrjc-loader-hide")}):(CRM.alert(e.message,"Error","error"),r.$broadcast("hrjc-loader-hide"))},function(e){})}}])}),define("job-contract/controllers/modal/modal-dialog",["job-contract/controllers/controllers"],function(e){"use strict";e.controller("ModalDialogCtrl",["$scope","$uibModalInstance","$timeout","content","$log",function(e,t,n,o,r){r.debug("Controller: ModalDialogCtrl"),e.title=o.title||"CiviHR Job Contract",e.msg=o.msg||"",e.copyConfirm=o.copyConfirm||"Yes",e.copyCancel=o.copyCancel||"Cancel",e.confirm=function(e){t.close(e||!0)},e.cancel=function(){t.dismiss("Cancel")}}])}),define("job-contract/controllers/modal/modal-progress",["job-contract/controllers/controllers"],function(e){"use strict";e.controller("ModalProgressCtrl",["$scope","$uibModalInstance","$q","$timeout","uploader","promiseFilesUpload","$log",function(e,t,n,o,r,i,a){a.debug("Controller: ModalProgressCtrl");var c,s;e.uploader=r;for(c in r)for(s in r[c])r[c][s].queue.length&&(r[c][s].item=r[c][s].queue[0].file.name),r[c][s].onProgressItem=function(e){this.item=e.file.name};n.all(i).then(function(e){o(function(){t.close(e)},500)}),e.cancel=function(){t.dismiss("File upload canceled")}}])}),define("job-contract/controllers/modal/modal-revision",["job-contract/controllers/controllers"],function(e){"use strict";e.controller("ModalRevisionCtrl",["$scope","$rootScope","$uibModalInstance","$filter","$q","settings","revisionDataList","revisionList","entity","fields","model","modalContract","utils","ContactService","$log",function(e,t,n,o,r,i,a,c,s,l,u,d,f,p,v){function h(){var t,n,o=i.pathReport+(i.pathReport.indexOf("?")>-1?"&":"?"),r=e.entity;return angular.forEach(e.fields,function(e){t="editor_name"!=e.name?e.name:"editor_uid",n=e.extends?"":r+"_",e.selected&&(o+="fields["+n+t+"]=1&")}),o+="fields[sort_name]=1&fields[first_name]=1&fields[last_name]=1&fields[external_identifier]=1&fields[email]=1&fields[street_address]=1&fields[city]=1&fields[name]=1&fields[contract_contact_id]=1&fields[contract_contract_id]=1&fields[jobcontract_revision_id]=1&fields[change_reason]=1&fields[created_date]=1&fields[effective_date]=1&fields[modified_date]=1&order_bys[1][column]=id&order_bys[1][order]=ASC&order_bys[2][column]=civicrm_hrjobcontract_revision_revision_id&order_bys[2][order]=ASC&order_bys[3][column]=-&order_bys[3][order]=ASC&order_bys[4][column]=-&order_bys[4][order]=ASC&order_bys[5][column]=-&order_bys[5][order]=ASC&contract_id_op=eq&permission=access+CiviReport&row_count=&_qf_Summary_submit_csv=Preview+CSV&groups=&contract_id_value="+c[0].jobcontract_id+"&group_bys[civicrm_hrjobcontract_revision_revision_id]=1"}switch(v.debug("Controller: ModalRevisionCtrl"),e.$broadcast("hrjc-loader-show"),e.currentPage=1,e.entity=s,e.fields=angular.copy(l),e.itemsPerPage=5,e.revisionDataList=[],e.revisionList=[],e.sortCol="effective_date",e.subFields={},e.maxSize=5,e.modalContract=d,e.sortReverse=!0,function(){var t,n=0,o=e.fields.length;for(n;n<o;n++)t=e.fields[n],t.selected=!0,t.isArray="leave_type"==t.name||"leave_amount"==t.name,"id"!=t.name&&"jobcontract_revision_id"!=t.name?t.display=!0:t.display=!1;e.fields.unshift({name:"effective_date",title:"Effective Date",display:!0,selected:!0,isArray:!1,extends:!0}),e.fields.push({name:"editor_name",title:"Change Recorded By",display:!0,selected:!0,isArray:!1,extends:!0},{name:"change_reason",title:"Reason For Change",display:!0,selected:!0,isArray:!1,extends:!0})}(),function(){var n,r,i=0,s=a.length;for(i;i<s;i++)n=i+1,r=n==s,a[i]||(a[i]=u),r||a[n]||(a[n]=u),angular.isArray(a[i])&&(a[i]={jobcontract_revision_id:a[i][0].jobcontract_revision_id,data:a[i]}),angular.extend(a[i],{effective_date:o("date")(c[i].effective_date,"yyyy/MM/dd")||"",editor_name:c[i].editor_name||"",change_reason:t.options.contract.change_reason[c[i].change_reason]||"",details_revision_id:c[i].details_revision_id,health_revision_id:c[i].health_revision_id,hour_revision_id:c[i].hour_revision_id,leave_revision_id:c[i].leave_revision_id,pay_revision_id:c[i].pay_revision_id,pension_revision_id:c[i].pension_revision_id,role_revision_id:c[i].role_revision_id}),e.revisionDataList.push(a[i])}(),s){case"hour":!function(){var t;angular.forEach(e.revisionDataList,function(e){e.location_standard_hours&&(t=o("filter")(f.hoursLocation,{id:e.location_standard_hours})[0],e.location_standard_hours=t.location+": "+t.standard_hours+"h per "+t.periodicity)})}();break;case"health":angular.forEach(e.revisionDataList,function(e){e.provider&&p.getOne(e.provider).then(function(t){e.provider=t.label}),e.provider_life_insurance&&p.getOne(e.provider_life_insurance).then(function(t){e.provider_life_insurance=t.label})});break;case"pay":!function(){var n;angular.forEach(e.revisionDataList,function(e){e.pay_scale&&(n=o("filter")(f.payScaleGrade,{id:e.pay_scale})[0]||o("filter")(f.payScaleGrade,{pay_scale:e.pay_scale})[0],e.pay_scale=n.pay_scale+(n.currency?" - "+t.options.pay.pay_currency[n.currency]:"")+(n.amount?" "+n.amount:"")+(n.pay_frequency?" per "+n.pay_frequency:""))})}(),o("filter")(e.fields,{name:"pay_is_auto_est"})[0].pseudoconstant=!0,e.subFields={annual_benefits:[{name:"name",title:"Benefit",pseudoconstant:"benefit_name"},{name:"type",title:"Type",pseudoconstant:"benefit_type"},{name:"amount_pct",title:"% amount",pseudoconstant:!1},{name:"amount_abs",title:"Absolute amount",pseudoconstant:!1}],annual_deductions:[{name:"name",title:"Deduction",pseudoconstant:"deduction_name"},{name:"type",title:"Type",pseudoconstant:"deduction_type"},{name:"amount_pct",title:"% amount",pseudoconstant:!1},{name:"amount_abs",title:"Absolute amount",pseudoconstant:!1}]};break;case"pension":o("filter")(e.fields,{name:"is_enrolled"})[0].pseudoconstant=!0}e.urlCSV=h(),e.createPage=function(){var t=(e.currentPage-1)*e.itemsPerPage,n=t+e.itemsPerPage;e.revisionDataListPage=e.revisionDataList.slice(t,n)},e.sortBy=function(t,n){"undefined"!=typeof t&&(e.sortCol==t?e.sortReverse=!e.sortReverse:e.sortCol=t),"undefined"!=typeof n&&(e.sortReverse=n),e.revisionDataList=o("orderBy")(e.revisionDataList,e.sortCol,e.sortReverse)},e.sortBy(),e.toggleFieldsSelected=function(t){t.selected=!t.selected,e.urlCSV=h()},n.opened.then(function(){t.$broadcast("hrjc-loader-hide")}),e.cancel=function(){n.dismiss("cancel")},e.$watch("currentPage",function(){e.createPage()})}])}),define("job-contract/controllers/form/form-general",["common/moment","job-contract/controllers/controllers","common/filters/angular-date/format-date"],function(e,t){"use strict";t.controller("FormGeneralCtrl",["$scope","$log","HR_settings",function(t,n,o){function r(t,n){if(!t||!n)return null;var o,r,i,a;return i=e(n),i.add(1,"days"),a=i.diff(t,"years"),i.add(-a,"years"),r=i.diff(t,"months"),i.add(-r,"months"),o=i.diff(t,"days"),a=a>0?a>1?a+" years ":a+" year ":"",r=r>0?r>1?r+" months ":r+" month ":"",o=o>0?o>1?o+" days":o+" day":"",a+r+o||"0 days"}function i(t,n){return n=n||"min",e(t)["max"===n?"subtract":"add"](1,"day").toDate()}function a(){return{start:{maxDate:c.period_end_date?i(c.period_end_date,"max"):null},end:{minDate:c.period_start_date?i(c.period_start_date,"min"):null}}}n.debug("Controller: FormGeneralCtrl");var c=t.entity.details;t.format=o.DATE_FORMAT,t.datepickerOptions=a(),t.dpOpen=function(e,n){e.preventDefault(),e.stopPropagation(),t[n]=!0},t.$watch("entity.details.period_start_date",function(){t.datepickerOptions.end.minDate=i(c.period_start_date,"min"),t.duration=r(c.period_start_date,c.period_end_date)}),t.$watch("entity.details.period_end_date",function(){c.period_end_date?t.datepickerOptions.start.maxDate=i(c.period_end_date,"max"):(t.datepickerOptions.start.maxDate=null,c.end_reason=null),t.duration=r(c.period_start_date,c.period_end_date)}),t.$watch("entity.details.position",function(e,n){e!==n&&c.title===n&&(t.contractForm.detailsTitle.$setViewValue(e),t.contractForm.detailsTitle.$render())}),t.$watch("entity.details.notice_amount",function(e,n){
+e&&!c.notice_unit&&(t.contractForm.detailsNoticeUnit.$setValidity("required",!1),t.contractForm.detailsNoticeUnit.$dirty=!0),e!==n&&c.notice_amount_employee===n&&(c.notice_amount_employee=e)}),t.$watch("entity.details.notice_amount_employee",function(e){+e&&!c.notice_unit_employee&&(t.contractForm.detailsNoticeUnitEmployee.$setValidity("required",!1),t.contractForm.detailsNoticeUnitEmployee.$dirty=!0)}),t.$watch("entity.details.notice_unit",function(e,t){e!==t&&c.notice_unit_employee===t&&(c.notice_unit_employee=e)})}])}),define("job-contract/vendor/fraction",[],function(){var e=function(t,n){if("undefined"!=typeof t&&n)"number"==typeof t&&"number"==typeof n?(this.numerator=t,this.denominator=n):"string"==typeof t&&"string"==typeof n&&(this.numerator=parseInt(t),this.denominator=parseInt(n));else if("undefined"==typeof n)if(num=t,"number"==typeof num)this.numerator=num,this.denominator=1;else if("string"==typeof num){var o,r,i=num.split(" ");if(i[0]&&(o=i[0]),i[1]&&(r=i[1]),o%1===0&&r&&r.match("/"))return new e(o).add(new e(r));if(!o||r)return;if("string"==typeof o&&o.match("/")){var a=o.split("/");this.numerator=a[0],this.denominator=a[1]}else{if("string"==typeof o&&o.match("."))return new e(parseFloat(o));this.numerator=parseInt(o),this.denominator=1}}this.normalize()};return e.prototype.clone=function(){return new e(this.numerator,this.denominator)},e.prototype.toString=function(){if("NaN"===this.denominator)return"NaN";var e=this.numerator/this.denominator>0?Math.floor(this.numerator/this.denominator):Math.ceil(this.numerator/this.denominator),t=this.numerator%this.denominator,n=this.denominator,o=[];return 0!=e&&o.push(e),0!=t&&o.push((0===e?t:Math.abs(t))+"/"+n),o.length>0?o.join(" "):0},e.prototype.rescale=function(e){return this.numerator*=e,this.denominator*=e,this},e.prototype.add=function(t){var n=this.clone();return t=t instanceof e?t.clone():new e(t),td=n.denominator,n.rescale(t.denominator),t.rescale(td),n.numerator+=t.numerator,n.normalize()},e.prototype.subtract=function(t){var n=this.clone();return t=t instanceof e?t.clone():new e(t),td=n.denominator,n.rescale(t.denominator),t.rescale(td),n.numerator-=t.numerator,n.normalize()},e.prototype.multiply=function(t){var n=this.clone();if(t instanceof e)n.numerator*=t.numerator,n.denominator*=t.denominator;else{if("number"!=typeof t)return n.multiply(new e(t));n.numerator*=t}return n.normalize()},e.prototype.divide=function(t){var n=this.clone();if(t instanceof e)n.numerator*=t.denominator,n.denominator*=t.numerator;else{if("number"!=typeof t)return n.divide(new e(t));n.denominator*=t}return n.normalize()},e.prototype.equals=function(t){t instanceof e||(t=new e(t));var n=this.clone().normalize(),t=t.clone().normalize();return n.numerator===t.numerator&&n.denominator===t.denominator},e.prototype.normalize=function(){var t=function(e){return"number"==typeof e&&(e>0&&e%1>0&&e%1<1||e<0&&e%-1<0&&e%-1>-1)},n=function(e,t){if(t){var n=Math.pow(10,t);return Math.round(e*n)/n}return Math.round(e)};return function(){if(t(this.denominator)){var o=n(this.denominator,9),r=Math.pow(10,o.toString().split(".")[1].length);this.denominator=Math.round(this.denominator*r),this.numerator*=r}if(t(this.numerator)){var o=n(this.numerator,9),r=Math.pow(10,o.toString().split(".")[1].length);this.numerator=Math.round(this.numerator*r),this.denominator*=r}var i=e.gcf(this.numerator,this.denominator);return this.numerator/=i,this.denominator/=i,(this.numerator<0&&this.denominator<0||this.numerator>0&&this.denominator<0)&&(this.numerator*=-1,this.denominator*=-1),this}}(),e.gcf=function(t,n){var o=[],r=e.primeFactors(t),i=e.primeFactors(n);if(r.forEach(function(e){var t=i.indexOf(e);t>=0&&(o.push(e),i.splice(t,1))}),0===o.length)return 1;var a=function(){var e,t=o[0];for(e=1;e<o.length;e++)t*=o[e];return t}();return a},e.primeFactors=function(e){for(var t=Math.abs(e),n=[],o=2;o*o<=t;)t%o===0?(n.push(o),t/=o):o++;return 1!=t&&n.push(t),n},e}),define("job-contract/controllers/form/form-hour",["job-contract/vendor/fraction","job-contract/controllers/controllers"],function(e,t){"use strict";t.controller("FormHourCtrl",["$scope","$rootScope","$filter","$log",function(t,n,o,r){function i(e,n){if(t.hrsTypeDefined=!!c.hours_type,t.hrsAmountDefined=!!c.hours_amount,c.hours_unit=e.periodicity,!t.hrsTypeDefined||t.hrsAmountDefined&&"FULL_TIME"!==u[+n])t.hrsAmountDefined||t.hrsAmountDefined||(c.hours_amount="",c.hours_unit="");else switch(u[+n]){case"FULL_TIME":c.hours_amount=e.standard_hours;break;case"PART_TIME":c.hours_amount=Math.round(e.standard_hours/2);break;case"CASUAL":c.hours_amount=0;break;default:c.hours_amount=""}}function a(n,o){o=parseFloat(o)||0,n=parseFloat(n)||0;var r=new e(o,n);c.fte_num=String(+c.hours_type?r.numerator:0),c.fte_denom=String(+c.hours_type?r.denominator:0),c.hours_fte=String(parseFloat((c.fte_num/c.fte_denom||0).toFixed(2))),t.fteFraction=c.fte_num+"/"+c.fte_denom}r.debug("Controller: FormHourCtrl");var c=t.entity.hour,s=t.utils.hoursLocation,l={},u={0:"CASUAL",4:"PART_TIME",8:"FULL_TIME"};t.hrsTypeDefined=!1,t.hrsAmountDefined=!1,c.location_standard_hours=c.location_standard_hours||"1",l=o("getObjById")(s,c.location_standard_hours),t.$watch("entity.hour.location_standard_hours",function(e){l=o("getObjById")(s,e),i(l,c.hours_type),a(l.standard_hours,c.hours_amount)}),t.$watch("entity.hour.hours_type",function(e,t){e!=t&&(i(l,e),a(l.standard_hours,c.hours_amount))}),t.$watch("entity.hour.hours_amount",function(e,t){e!=t&&a(l.standard_hours,e)}),t.$watch("entity.hour.hours_unit",function(e,t){e!=t&&a(l.standard_hours,c.hours_amount)})}])}),define("job-contract/controllers/form/form-health",["job-contract/controllers/controllers","job-contract/services/contact"],function(e){"use strict";e.controller("FormHealthCtrl",["$scope","ContactService","$log",function(e,t,n){n.debug("Controller: FormHealthCtrl"),e.contacts={Health_Insurance_Provider:[],Life_Insurance_Provider:[]},e.refreshContacts=function(n,o){n&&t.search(n,{contact_type:"Organization",contact_sub_type:o}).then(function(t){e.contacts[o]=t})},e.entity.health.provider&&t.getOne(e.entity.health.provider).then(function(t){e.contacts.Health_Insurance_Provider.push(t)}),e.entity.health.provider_life_insurance&&t.getOne(e.entity.health.provider_life_insurance).then(function(t){e.contacts.Life_Insurance_Provider.push(t)})}])}),define("job-contract/controllers/form/form-pay",["job-contract/controllers/controllers"],function(e){"use strict";e.controller("FormPayCtrl",["$scope","$filter","settings","$log",function(e,t,n,o){function r(){var e=1;switch(+i.pay_cycle){case 1:e=s.Week;break;case 2:e=s.Month;break;case 3:e=s.Biweekly;break;case 4:e=s.Bimonthly}return e}o.debug("Controller: FormPayCtrl");var i=e.entity.pay||{},a={pay_amount:0,pay_currency:n.CRM.defaultCurrency,pay_cycle:"2",pay_unit:"Year"},c=e.utils.payScaleGrade,s={Year:1,Month:12,Bimonthly:24,Week:52,Biweekly:104,Fortnight:26,Day:260,Hour:2080};i.is_paid=i.is_paid||0,i.pay_is_auto_est="0",i.annual_benefits=i.annual_benefits||[],i.annual_deductions=i.annual_deductions||[],e.collapseBenDed=!i.annual_benefits.length&&!i.annual_deductions.length,e.benefits_per_cycle=(0).toFixed(2),e.benefits_per_cycle_net=0,e.deductions_per_cycle=(0).toFixed(2),e.add=function(e){e.push({name:"",type:"",amount_pct:"",amount_abs:""})},e.applyPayScaleGradeData=function(){if(i.pay_scale){var e=t("getObjById")(c,i.pay_scale);i.pay_amount=e.amount||a.pay_amount,i.pay_currency=e.currency||a.pay_currency,i.pay_unit=e.pay_frequency||a.pay_unit}},e.calcAnnualPayEst=function(){+i.is_paid&&(i.pay_annualized_est=(i.pay_amount*s[i.pay_unit]||0).toFixed(2))},e.calcBenefitsPerCycle=function(){if(+i.is_paid){var t=0,n=i.annual_benefits.length,o=0;for(t;t<n;t++)2==+i.annual_benefits[t].type&&(i.annual_benefits[t].amount_abs=(i.annual_benefits[t].amount_pct/100*i.pay_annualized_est).toFixed(2)),o+=+i.annual_benefits[t].amount_abs;e.benefits_per_cycle=(o/r()).toFixed(2)}},e.calcBenefitsPerCycleNet=function(){+i.is_paid&&(e.benefits_per_cycle_net=e.benefits_per_cycle-e.deductions_per_cycle)},e.calcDeductionsPerCycle=function(){if(+i.is_paid){var t=0,n=i.annual_deductions.length,o=0;for(t;t<n;t++)2==+i.annual_deductions[t].type&&(i.annual_deductions[t].amount_abs=(i.annual_deductions[t].amount_pct/100*i.pay_annualized_est).toFixed(2)),o+=+i.annual_deductions[t].amount_abs;e.deductions_per_cycle=(o/r()).toFixed(2)}},e.calcPayPerCycleGross=function(){+i.is_paid&&(i.pay_per_cycle_gross=(i.pay_annualized_est/r()).toFixed(2))},e.calcPayPerCycleNet=function(){+i.is_paid&&(i.pay_per_cycle_net=(+i.pay_per_cycle_gross+ +e.benefits_per_cycle_net).toFixed(2))},e.resetData=function(){i.pay_scale="",i.pay_amount="",i.pay_unit="",i.pay_currency="",i.pay_annualized_est="",i.pay_is_auto_est="",i.annual_benefits=[],i.annual_deductions=[],i.pay_cycle="",i.pay_per_cycle_gross="",i.pay_per_cycle_net="",e.benefits_per_cycle="",e.deductions_per_cycle=""},e.setDefaults=function(){i.pay_cycle=a.pay_cycle,i.pay_currency=a.pay_currency,i.pay_is_auto_est="0",i.pay_amount=(0).toFixed(2)},e.remove=function(e,t){e.splice(t,1)},e.$watch("entity.pay.pay_amount",e.calcAnnualPayEst),e.$watch("entity.pay.pay_unit",e.calcAnnualPayEst),e.$watch("entity.pay.pay_annualized_est",function(){e.calcPayPerCycleGross(),e.calcBenefitsPerCycle(),e.calcDeductionsPerCycle()}),e.$watch("entity.pay.annual_benefits",e.calcBenefitsPerCycle,!0),e.$watch("entity.pay.annual_deductions",e.calcDeductionsPerCycle,!0),e.$watch("benefits_per_cycle",e.calcBenefitsPerCycleNet),e.$watch("deductions_per_cycle",e.calcBenefitsPerCycleNet),e.$watch("benefits_per_cycle_net",e.calcPayPerCycleNet),e.$watch("entity.pay.pay_per_cycle_gross",e.calcPayPerCycleNet)}])}),define("job-contract/controllers/form/form-pension",["job-contract/controllers/controllers","job-contract/services/contact"],function(e){"use strict";e.controller("FormPensionCtrl",["$scope","settings","ContactService","$log",function(e,t,n,o){o.debug("Controller: FormPensionCtrl"),e.contacts={Pension_Provider:[]},function(){e.entity.pension.pension_type&&n.getOne(e.entity.pension.pension_type).then(function(t){e.contacts.Pension_Provider.push(t)})}(),e.refreshContacts=function(t,o){t&&n.search(t,{contact_type:"Organization",contact_sub_type:o}).then(function(t){e.contacts[o]=t})}}])}),define("job-contract/controllers/form/form-leave",["common/lodash","job-contract/controllers/controllers"],function(e,t){"use strict";t.controller("FormLeaveCtrl",["$scope","$log","UtilsService",function(t,n,o){function r(){i(),a()}function i(){o.getNumberOfPublicHolidaysInCurrentPeriod().then(function(e){s.numberOfPublicHolidays=e})}function a(){t.$watch("entity.leave",c,!0)}function c(t,n){var o=e.find(t,function(e,t){return e.add_public_holidays&&!n[t].add_public_holidays});o&&t.forEach(function(e){e.leave_type!=o.leave_type&&(e.add_public_holidays=!1)})}n.debug("Controller: FormLeaveCtrl");var s={};return s.numberOfPublicHolidays=0,r(),s}])}),define("job-contract/directives/directives",["common/angular"],function(e){"use strict";return e.module("hrjc.directives",[])}),define("job-contract/directives/contact",["job-contract/directives/directives"],function(e){"use strict";e.directive("hrjcContact",["$compile","ContactService","settings","$log",function(e,t,n,o){return o.debug("Directive: hrjcContact"),{restrict:"A",scope:{renderAsLink:"=?hrjcContactLink",contactId:"=?hrjcContact"},template:"{{contact.label}}",link:function(n,o){n.contactId&&n.$watch("contactId",function(r){t.getOne(n.contactId).then(function(t){n.contact=t,n.renderAsLink&&(o.html('<a ng-href="/civicrm/contact/view?reset=1&cid={{contactId}}">{{contact.label}}</a>'),e(o.contents())(n))})})}}}])}),define("job-contract/directives/loader",["job-contract/directives/directives"],function(e){"use strict";e.directive("hrjcLoader",["$rootScope","$log",function(e,t){return t.debug("Directive: hrjcLoader"),{link:function(e,t,n){function o(){var e=window.getComputedStyle(t[0]).position;return"relative"==e||"absolute"==e||"fixed"==e}function r(){o()||(t.css("position","relative"),s=!0),t.append(a),c=!0}function i(){c&&a.parentNode.removeChild(a),c=!1,s&&t.css("position","")}var a=document.createElement("div"),c=!1,s=!1;a.className="hrjc-loader",n.hrjcLoaderShow&&r(),e.$on("hrjc-loader-show",function(){r()}),e.$on("hrjc-loader-hide",function(){i()})}}}])}),define("job-contract/directives/number",["job-contract/directives/directives"],function(e){"use strict";e.directive("hrjcNumber",["$log",function(e){return e.debug("Directive: hrjcNumber"),{require:"ngModel",link:function(e,t,n,o){var r=2,i=n.hrjcNumberFloat||!1;n.hrjcNumber&&"number"==typeof+n.hrjcNumber&&(r=n.hrjcNumber),t.bind("blur",function(){var e=parseFloat(o.$viewValue)||0;o.$setViewValue(i?Math.round(100*e)/100:e.toFixed(r)),o.$render()})}}}])}),define("job-contract/directives/validate",["job-contract/directives/directives"],function(e){"use strict";e.directive("hrjcValidate",["$log",function(e){return e.debug("Directive: hrjcValidate"),{restrict:"A",require:"^form",scope:{isWarning:"=?hrjcValidateWarning"},link:function(e,t,n,o){function r(e,n){t.toggleClass("has-success",!e&&!n),d.toggleClass("glyphicon-ok",!e&&!n)}function i(e,n){t.toggleClass("has-warning",!e&&n),d.toggleClass("glyphicon-warning-sign",!e&&n)}function a(e){t.toggleClass("has-error",e),d.toggleClass("glyphicon-remove",e)}var c=t[0].querySelector("[name]"),s=angular.element(c),l=s.attr("name"),u=document.createElement("span"),d=angular.element(u);l&&(t.addClass("has-feedback"),d.addClass("glyphicon form-control-feedback"),s.after(d),e.$watch(function(){return o[l]&&o[l].$invalid},function(t){o[l].$dirty&&(r(t,e.isWarning),a(t))}),"undefined"!=typeof e.isWarning&&e.$watch("isWarning",function(e){var t=o[l].$invalid;o[l].$dirty&&(r(t,e),i(t,e))}),s.bind("blur",function(){a(o[l].$invalid)}))}}}])}),define("job-contract/filters/capitalize",["job-contract/filters/filters"],function(e){"use strict";e.filter("capitalize",["$log",function(e){return e.debug("Filter: capitalize"),function(e){return e?e.replace(/([^\W_]+[^\s-]*) */g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()}):""}}])}),define("job-contract/filters/format-amount",["job-contract/filters/filters"],function(e){"use strict";e.filter("formatAmount",["$log",function(e){return e.debug("Filter: formatAmount"),function(e){return e&&e.indexOf(".")===-1?e+".00":e}}])}),define("job-contract/filters/format-period",["job-contract/filters/filters"],function(e){"use strict";e.filter("formatPeriod",["$filter","$log",function(e,t){return t.debug("Filter: formatPeriod"),function(t){return t?e("date")(t,"yyyy/MM/dd"):"Unspecified"}}])}),define("job-contract/filters/parse-int",["job-contract/filters/filters"],function(e){"use strict";e.filter("parseInt",["$log",function(e){return e.debug("Filter: parseInt"),function(e){return e?parseInt(e):null}}])}),define("job-contract/services/contract-revision-list",["common/lodash","job-contract/services/services"],function(e,t){"use strict";t.factory("ContractRevisionList",["$filter","$q","$log","ContractService","ContractFilesService","ContractRevisionService",function(t,n,o,r,i,a){function c(e){return{details:{position:e["details_revision_id.position"],location:e["details_revision_id.location"]},hour:{hours_type:e["hour_revision_id.hours_type"]},pay:{pay_annualized_est:e["pay_revision_id.pay_annualized_est"],pay_currency:e["pay_revision_id.pay_currency"],pay_scale:e["pay_revision_id.pay_scale"]}}}function s(t){return t.effective_date=t.effective_date||"",n.all({files:{details:i.get(t.details_revision_id,"civicrm_hrjobcontract_details")},aggregated:a.get({action:"getsingle",json:{sequential:1,id:t.id,return:["details_revision_id.position","details_revision_id.location","hour_revision_id.hours_type","pay_revision_id.pay_scale","pay_revision_id.pay_annualized_est","pay_revision_id.pay_currency"]}}).$promise.then(function(e){return e})}).then(function(n){return e.assign({revisionEntityIdObj:t,files:n.files},c(n.aggregated))})}function l(e){var o=[],i=[],a=n.defer();return r.getRevision(e).then(function(e){return o=t("orderBy")(e,["-effective_date","-id"]),n.all(o.map(s))}).then(function(e){i=e,a.resolve({revisionList:o,revisionDataList:e})}),a.promise}return o.debug("Service: ContractRevisionList"),{fetchRevisions:l}}])}),function(e,t){function n(){var e={nodiff:"",year:"year",years:"years",month:"month",months:"months",day:"day",days:"days",hour:"hour",hours:"hours",minute:"minute",minutes:"minutes",second:"second",seconds:"seconds",delimiter:" "};moment.fn.preciseDiff=function(e){return moment.preciseDiff(this,e)},moment.preciseDiff=function(t,n){function o(t,n){return t+" "+e[n+(1===t?"":"s")]}var r=moment(t),i=moment(n);if(r.isSame(i))return e.nodiff;if(r.isAfter(i)){var a=r;r=i,i=a}var c=i.year()-r.year(),s=i.month()-r.month(),l=i.date()-r.date();if(l<0){var u=moment(i.year()+"-"+(i.month()+1),"YYYY-MM").subtract("months",1).daysInMonth();l=u<r.date()?u+l+(r.date()-u):u+l,s--}s<0&&(s=12+s,c--);var d=[];return c&&d.push(o(c,"year")),s&&(c&&d.push(","),d.push(o(s,"month"))),l&&(s&&d.push("and"),d.push(o(l,"day"))),d.join(e.delimiter)}}function o(t,o,r){moment.preciseDiff||n();var i=moment(t,"MMMM DD, YYYY"),a="";if(o)var c=moment(o,"MMMM DD, YYYY");var s=moment();if(o)var l=c.diff(s,"days");else var l=s.diff(i,"days");a=l<0?moment.preciseDiff(i,c):moment().preciseDiff(i);var u=s.diff(i,"days");u<=0&&(a="0 days"),e("#initial_join_date").remove();var d="<div class='crm-summary-row' id='initial_join_date'><div class='crm-label'>Length Of Employment</div><div class='crm-content crm-custom-data lengthEmployment'></div></div>";e("#custom-set-content-"+r+" .crm-inline-block-content").append(d),e(".lengthEmployment").html(a),o&&l<0&&e(".lengthEmployment").css({color:"#FF0000"})}var r=CRM.grID,i=e("#custom-set-content-"+r+" .crm-inline-block-content div:nth-child(2) .crm-custom-data").html(),a=e("#custom-set-content-"+r+" .crm-inline-block-content div:nth-child(3) .crm-custom-data").html();i&&o(i,a,r),e(document).on("click","#_qf_CustomData_upload",function(){e(document).ajaxSuccess(function(t,n,i){i.extraData&&"CRM_Contact_Form_Inline_CustomData"==i.extraData.class_name&&i.extraData.groupID==r&&setTimeout(function(){var t=e("#custom-set-content-"+r+" .crm-inline-block-content div:nth-child(2) .crm-custom-data").html(),n=e("#custom-set-content-"+r+" .crm-inline-block-content div:nth-child(3) .crm-custom-data").html();t&&o(t,n,r)},300)})})}(CRM.$,CRM._),define("job-contract/app",["common/angular","common/ui-select","common/services/dom-event-trigger","common/services/angular-date/date-format","common/modules/routers/compu-ng-route","common/modules/directives","common/directives/angular-date/date-input","job-contract/controllers/controllers","job-contract/controllers/contract-list","job-contract/controllers/contract","job-contract/controllers/revision-list","job-contract/controllers/modal/modal-change-reason","job-contract/controllers/modal/modal-contract","job-contract/controllers/modal/modal-contract-new","job-contract/controllers/modal/modal-dialog","job-contract/controllers/modal/modal-progress","job-contract/controllers/modal/modal-revision","job-contract/controllers/form/form-general","job-contract/controllers/form/form-hour","job-contract/controllers/form/form-health","job-contract/controllers/form/form-pay","job-contract/controllers/form/form-pension","job-contract/controllers/form/form-leave","job-contract/directives/directives","job-contract/directives/contact","job-contract/directives/directives","job-contract/directives/loader","job-contract/directives/number","job-contract/directives/validate","job-contract/filters/filters","job-contract/filters/capitalize","job-contract/filters/get-obj-by-id","job-contract/filters/format-amount","job-contract/filters/format-period","job-contract/filters/parse-int","job-contract/services/services","job-contract/services/contract","job-contract/services/contract-revision-list","job-contract/vendor/job-summary"],function(e){"use strict";e.module("hrjc",["ngAnimate","compuNgRoute","ngResource","angularFileUpload","ui.bootstrap","ui.select","common.angularDate","common.services","common.directives","hrjc.controllers","hrjc.directives","hrjc.filters","hrjc.services"]).constant("settings",{classNamePrefix:"hrjc-",contactId:CRM.jobContractTabApp.contactId,debug:+CRM.debug,pathApp:CRM.jobContractTabApp.path,pathFile:CRM.url("civicrm/hrjobcontract/file/"),pathReport:CRM.url("civicrm/report/hrjobcontract/summary"),pathRest:CRM.url("civicrm/ajax/rest"),pathTpl:CRM.jobContractTabApp.path+"views/",CRM:{options:CRM.FieldOptions||{},defaultCurrency:CRM.jobContractTabApp.defaultCurrency,apiTsFmt:"YYYY-MM-DD HH:mm:ss",fields:CRM.jobContractTabApp.fields,maxFileSize:CRM.jobContractTabApp.maxFileSize}}).config(["settings","$routeProvider","$resourceProvider","$logProvider","$httpProvider","uibDatepickerConfig","uiSelectConfig",function(e,t,n,o,r,i,a){o.debugEnabled(e.debug),t.resolveForAll({format:["DateFormat",function(e){return e.getDateFormat()}]}).when("/",{controller:"ContractListCtrl",templateUrl:e.pathApp+"views/contractList.html",resolve:{contractList:["ContractService",function(e){return e.get()}]}}).otherwise({redirectTo:"/"}),n.defaults.stripTrailingSlashes=!1,r.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",a.theme="bootstrap",i.showWeeks=!1}]).run(["settings","$rootScope","$q","$log","ContractService","ContractDetailsService","ContractHourService","ContractPayService","ContractLeaveService","ContractHealthService","ContractPensionService",function(e,t,n,o,r,i,a,c,s,l,u){o.debug("app.run"),t.pathTpl=e.pathTpl,t.prefix=e.classNamePrefix,n.all({contract:r.getRevisionOptions(),details:i.getOptions(),hour:a.getOptions(),pay:c.getOptions(),leave:s.getOptions(),health:l.getOptions(),pension:u.getOptions()}).then(function(e){e.pay.pay_is_auto_est=["No","Yes"],e.pension.is_enrolled=["No","Yes","Opted out"],o.debug("OPTIONS:"),o.debug(e),t.options=e})}])}),function(e,t){var n=e.jobContractTabApp.path+"js/src/job-contract";t.config({urlArgs:"bust="+(new Date).getTime(),paths:{"job-contract":n,"job-contract/vendor/fraction":n+"/vendor/fraction","job-contract/vendor/job-summary":n+"/vendor/jobsummary"},shim:{"job-contract/vendor/job-summary":{deps:["common/moment"]}}}),t(["job-contract/app"],function(){"use strict";document.dispatchEvent("function"==typeof window.CustomEvent?new CustomEvent("hrjcReady"):function(){var e=document.createEvent("Event");return e.initEvent("hrjcReady",!0,!0),e}())})}(CRM,require);